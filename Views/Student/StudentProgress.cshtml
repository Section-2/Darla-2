@using Darla.Models
@{
    Layout = null; 
   
    var Submissions = ViewBag.Submissions;
    var Classes = ViewBag.Classes;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Submissions with Rubric Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
</head>
<body class="bg-blue-200 min-h-screen">

    <div class="container mx-auto p-4">
        <div class="text-right mb-4">
            <button onclick="window.history.back()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                Back
            </button>
        </div>
        <h1 class="text-3xl font-bold text-center mb-6">Student Submissions</h1>

@*Logic to write out all of the classes, their dropdown rubirc information, checkboxes, etc*@
        @{
            var courses = new[] { "IS 401", "IS 413", "IS 414", "IS 455" };
            foreach (var course in courses)
            {
                <div onclick="toggleRubricDetails('@course')" class="bg-white p-4 rounded shadow cursor-pointer mb-2 flex justify-between items-start">
                    <h2 class="text-xl font-bold">@course Rubric Details</h2>
                    <div class="flex items-center">
                        <div class="w-64 bg-gray-200 rounded-full h-2.5">
                            <div id="progressBar-@course" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
                        </div>
                        <div id="progressText-@course" class="ml-2">0%</div>
                    </div>
                </div>
                <div id="rubricDetails-@course" class="bg-gray-100 p-4 rounded shadow mb-4 hidden">
                    <!-- Single grid for requirements and checkboxes ensures alignment -->
                    <div class="grid grid-cols-1 gap-4">
                        <h3 class="text-lg font-semibold">Requirements</h3>
                        @for (int i = 0; i < 5; i++)
                        {
                            <!-- Grid layout for each requirement + checkbox pair -->
                            <div class="flex justify-between items-start mt-4">
                                <div class="text-md flex-grow">Requirement @(i + 1) for @course:</div>
                                <div class="flex-shrink-0 flex items-center ml-4">
                                    <input type="checkbox" class="transform scale-125" onchange="updateProgress('@(course)')">
                                    <label class="ml-2 text-md font-bold">Completed</label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
 

        <div class="bg-white p-4 rounded shadow mt-6">
     

            @if (Submissions != null)
            {
                // This genereateas all submission from the db that match the TeamNumber
                <div class="submissions-list">
                    @foreach (var submission in Submissions)
                    {
                        <div class="submission">
                            <div>
                                <strong>Github Link:</strong> 
                                <a href="@submission.GithubLink" target="_blank">@submission.GithubLink</a>
                            </div>
                            <div>
                                <strong>Video Link:</strong> 
                                <a href="@submission.VideoLink" target="_blank">@submission.VideoLink</a>
                            </div>
                            <div>
                                <strong>Timestamp:</strong> @submission.Timestamp
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No submissions found.</p>
            }


            <div class="flex justify-end mt-6">
                <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 " data-bs-toggle="modal" data-bs-target="#githubModal">
                    Submit GitHub Link
                </button>
                <button type="button" class="ml-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" data-bs-toggle="modal" data-bs-target="#videoModal">
                    Submit Video
                </button>
            </div>
        </div>
        <h2>Class Codes</h2>
        <ul>
            @foreach (var classCode in Classes)
            {
                <li>@classCode</li>
            }
        </ul>

      
        <a href="@Url.Action("RubricDetails", "Student", new { classCode = 401 })" class="btn btn-primary">View Rubrics for Class 401</a>

    </div>

    <script>
        // Ensure DOM is fully loaded before attaching event handlers
        document.addEventListener("DOMContentLoaded", function () {
            // Function to toggle visibility of rubric details
            window.toggleRubricDetails = function (courseId) {
                var details = document.getElementById(`rubricDetails-${courseId}`);
                details.classList.toggle("hidden");
            };

            // Function to update progress bar and text
            window.updateProgress = function (courseId) {
                // This escaping is necessary only for the CSS selector used with querySelectorAll
                const escapedCourseId = courseId.replace(/ /g, '\\ ');

                // Use querySelectorAll with escapedCourseId for the checkboxes
                const checkboxes = document.querySelectorAll(`#rubricDetails-${escapedCourseId} input[type='checkbox']`);
                const total = checkboxes.length;
                const checked = Array.from(checkboxes).filter(checkbox => checkbox.checked).length;
                const progress = total > 0 ? (checked / total) * 100 : 0;

                // Use getElementById with the original courseId for element IDs without escaped characters
                const progressBar = document.getElementById(`progressBar-${courseId}`);
                const progressText = document.getElementById(`progressText-${courseId}`);

                // Update the progress bar and text
                if (progressBar && progressText) {
                    progressBar.style.width = `${progress}%`;
                    progressText.innerText = `${progress.toFixed(0)}%`;
                }
            };
        });

        function submitGitHubLink() {
            var githubLink = document.getElementById('githubLinkInput').value;
            // Perform any necessary validation or processing
            alert('GitHub link submitted: ' + githubLink);
            $('#exampleModal').modal('hide');
        };

        function submitVideo() {
            var githubLink = document.getElementById('submitVideo').value;
            // Perform any necessary validation or processing
            alert('Video submitted: ' + submitVideo);
            $('#exampleModal').modal('hide');
        };
    </script>
</body>

<!-- GitHub Modal -->
<div class="modal fade" id="githubModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Github Link Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitGitHubLink">Submit</button>
            </div>
        </div>
    </div>
</div>
</html>

<!-- Video Modal -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Video Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitVideo()">Submit</button>
            </div>
        </div>
    </div>
</div>
</html>
